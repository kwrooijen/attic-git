#!/bin/bash

# function gitu {
#   trigger=0
#   i=1
#   git status | while read line
#   do

#     if [ "$line" = '# Changes not staged for commit:' ];then
#       trigger=0
#     elif [ "$line" = '# Untracked files:' ];then
#       trigger=0
#     fi

#     if [ "$trigger" = 1 ];then
#       if [ "$line" = '#' ];then
#       else
#         staged_array[$i]=`printf "%s\n" "$line" | grep -i modi | awk '{print $3}'`
#         i=`expr $i + 1`
#       fi
#     fi

#     if [ "$line" = '#   (use "git reset HEAD <file>..." to unstage)' ];then
#       trigger=1
#     fi
#   done

#   echo $staged_array[2]
# }

function agit {
	# modified_count=`git status | grep --count modified`

	# deleted_count=`git status | grep --count deleted`

  staged_count=0
	modified_count=0
	deleted_count=0
  untracked_count=0
  array_count=1

  git diff --name-only --cached | while read line
  do
    file_array[$array_count]=$line
    staged_count=`expr $staged_count + 1`
    array_count=`expr $array_count + 1`
  done

  git ls-files -m | while read line
  do
    file_array[$array_count]=$line
    modified_count=`expr $modified_count + 1`
    array_count=`expr $array_count + 1`
  done
  modified_count=`expr $modified_count + $staged_count`

  git ls-files -d | while read line
  do
    file_array[$array_count]=$line
    deleted_count=`expr $deleted_count + 1`
    array_count=`expr $array_count + 1`
  done
  deleted_count=`expr $deleted_count + $modified_count`

  git ls-files --other --exclude-standard | while read line
  do
    file_array[$array_count]=$line
    untracked_count=`expr $untracked_count + 1`
    array_count=`expr $array_count + 1`
  done
  untracked_count=`expr $untracked_count + $deleted_count`


  if [ $1 = "status" ];then
    agitstatus
  else
    echo "foo"
  fi

  function agitstatus {
    function_count=0
	  echo `git status | head -1`
    if [ $staged_count != 0 ];then
      echo "# Changes to be commited"
      echo "#   (use 'agit reset head to <file_id>...' to unstage)"
      while [ $function_count != $staged_count ];do
        if [ $function_count -lt 10 ];then
          tag=`git status | grep ${file_array[$function_count+1]} | awk '{print $2}'`
          echo "#       `tput setaf 2`(`expr $function_count + 1`)  - $tag   ${file_array[$function_count+1]}`tput sgr0`"
        else
          echo "#       `tput setaf 2`(`expr $function_count + 1`) - $tag   ${file_array[$function_count+1]}`tput sgr0`"
        fi
        function_count=`expr $function_count + 1`
      done
    fi


    if [ $modified_count != 0 ];then
      echo "#"
			echo "# Changed but not updated:"
			echo "#   (use 'agit add/rm <file_id>...' to update what will be committed)"
			echo "#   (use 'agit checkout -- <file_id>...' to discard changes in working directory)"
      while [ $function_count != $modified_count ];do
        if [ $function_count -lt 10 ];then
          echo "#       `tput setaf 1`(`expr $function_count + 1`)  - modified:   ${file_array[$function_count+1]}`tput sgr0`"
        else
          echo "#       `tput setaf 1`(`expr $function_count + 1`) - modified:   ${file_array[$function_count+1]}`tput sgr0`"
        fi
        function_count=`expr $function_count + 1`
      done
    fi

    if [ $deleted_count != 0 ];then
      echo "#"
      while [ $function_count != $deleted_count ];do
        if [ $function_count -lt 9 ];then
          echo "#       `tput setaf 1`(`expr $function_count + 1`)  - deleted:   ${file_array[$function_count+1]}`tput sgr0`"
        else
          echo "#       `tput setaf 1`(`expr $function_count + 1`) - deleted:   ${file_array[$function_count+1]}`tput sgr0`"
        fi
        function_count=`expr $function_count + 1`
      done
    fi

    if [ $untracked_count != 0 ];then
      echo "#"
      echo "# Untracked files:"
      echo "#   (use 'agit add <file_id>...' to update what will be committed)"
      while [ $function_count != $untracked_count ];do
        if [ $function_count -lt 10 ];then
          echo "#       `tput setaf 1`(`expr $function_count + 1`)  - untracked:   ${file_array[$function_count+1]}`tput sgr0`"
        else
          echo "#       `tput setaf 1`(`expr $function_count + 1`) - untracked:   ${file_array[$function_count+1]}`tput sgr0`"
        fi
        function_count=`expr $function_count + 1`
      done
    fi
  }

  # git status | while read line
  # do
  #   if [ "$line" = '# Changes not staged for commit:' ];then
  #     trigger=0
  #   elif [ "$line" = '# Untracked files:' ];then
  #     trigger=0
  #   fi

  #   if [ "$trigger" = 1 ];then
  #     if [ "$line" = '#' ];then
  #     else
  #       staged_array[$i]=`printf "%s\n" "$line" | grep -i modi | awk '{print $3}'`
  #       i=`expr $i + 1`
  #       staged_count=$i
  #     fi
  #   fi

  #   if [ "$line" = '#   (use "git reset HEAD <file>..." to unstage)' ];then
  #     trigger=1
  #   fi
  # done

  # o=1

  # git status |
  # grep modified |
  # awk '{print $3}' |
  # while read line
  # do
  #   new_array2[$o]=$line
  #   o=`expr $o + 1`
  # done

  # git status |
  # grep deleted |
  # awk '{print $3}' |
  # while read line
  # do
  #   new_array2[$o]=$line
  #   o=`expr $o + 1`
  # done

  # git status | grep -v modified |
  # grep -v deleted |
  # grep -v "untracked files:" |
  # grep -v '(use "git' |
  # grep -v "on branch" |
  # grep -v "changes not sta" |
  # grep -v "no changes added to commit" |
  # awk '{print $2}' |
  # tail -n -2 |
  # while read line
  # do
  #   new_array2[$o]=$line
  #   o=`expr $o + 1`
  #   unstaged_count=`expr $unstaged_count + 1`
  # done

	# if [ "$1" = "add" ];then
	# 	for i in ${@:2};do
	# 		git add ${new_array2[$i]}
	# 	done

	# elif [ "$1" = "reset" ];then
	# 	if [ "$2" = "head" ];then
	# 		for i in ${@:3};do
	# 			git reset head ${new_array2[$i]}
	# 		done
	# 	fi

	# elif [ "$1" = "status" ];then
	# 	if [ -z "$2" ];then
	# 		echo `git status | head -1`

      # if [ $staged_count != 1 ];then
        # staged_loop=1
        # echo "# Changes to be commited"
        # echo "#   (use 'agit reset head to <file_id>...' to unstage)"
        # while [ "$staged_loop" != "$staged_count" ];do
          # echo "#       `tput setaf 2`($staged_loop) - modified:   ${staged_array[$staged_loop]}`tput sgr0`"
          # staged_loop=`expr $staged_loop + 1`
        # done
        # echo "#"
      # fi

	# 		echo "# Changed but not updated:"
	# 		echo "#   (use 'agit add/rm <file_id>...' to update what will be committed)"
	# 		echo "#   (use 'agit checkout -- <file_id>...' to discard changes in working directory)"
	# 		i=1
	# 		if [ $modified_count != 0 ];then
	# 			echo "#"
        # while [ $i -lt `expr $modified_count + 1` ];do
          # echo "#       `tput setaf 1`($i) - modified:   ${new_array2[$i]}`tput sgr0`"
          # i=`expr $i + 1`
        # done
	# 		fi

	# 		if [ $deleted_count != 0 ];then
	# 			echo "#"
        # while [ $i -lt `expr $modified_count + $deleted_count + 1` ];do
          # echo "#       `tput setaf 1`($i) - deleted:    ${new_array2[$i]}`tput sgr0`"
          # i=`expr $i + 1`
        # done
	# 		fi

	# 		if [ $unstaged_count != 0 ];then
	# 			echo "#"
        # echo "# Untracked files:"
        # echo "#   (use 'agit add <file_id>...' to update what will be committed)"
        # while [ $i -lt `expr $modified_count + $deleted_count + $unstaged_count + 1` ];do
          # echo "#       `tput setaf 1`($i) - untracked:   ${new_array2[$i]}`tput sgr0`"
          # i=`expr $i + 1`
        # done
	# 		fi
	# 	fi

	# elif [ "$1" = "diff" ];then
	# 	if [ -z "$2" ];then
	# 		git diff
	# 	else
	# 		git diff ${new_array2[$2]}
	# 	fi
	# else
	# 	git ${@:1}
	# fi

	# tput sgr0
}
